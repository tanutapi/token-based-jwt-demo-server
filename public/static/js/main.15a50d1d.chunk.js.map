{"version":3,"sources":["AppTitle.js","TokenAndClientId.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["AppTitle","clientId","onChangeClientId","TokenAndClientId","token","refreshToken","onChangeToken","onChangeRefreshToken","onRefreshNewToken","useState","jwtPayload","setJwtPayload","expiredInSeconds","setExpiredInSeconds","useEffect","jwt","decode","interval","setInterval","exp","parseInt","Date","now","clearInterval","Table","Button","block","size","onClick","newClientId","prompt","style","color","newToken","Form","Control","as","rows","value","onChange","disabled","JSON","stringify","className","Login","onLogout","onLogin","onLogoutAll","username","setUsername","password","setPassword","payload","variant","sub","Row","Col","type","placeholder","event","target","App","localStorage","getItem","setClientId","setToken","setRefreshToken","profile","setProfile","fetchingProfileStatusCode","setFetchingProfileStatusCode","isFetchingProfile","setIsFachingProfile","console","log","uuidv4","setItem","Container","fetch","method","headers","body","then","res","status","json","text","catch","err","data","refresh","alert","error","clearToken","setTimeout","Spinner","animation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15a50d1d.chunk.js","sourcesContent":["function AppTitle({clientId, onChangeClientId}) {\r\n  return (\r\n    <>\r\n      <h1>Token-based Application Demo</h1>\r\n      <h3>EGCO676 Network Security and Risk Assessment</h3>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppTitle;","import { Button, Form, Table } from \"react-bootstrap\";\r\nimport jwt from 'jsonwebtoken';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction TokenAndClientId({clientId, token, refreshToken, onChangeClientId, onChangeToken, onChangeRefreshToken, onRefreshNewToken}) {\r\n\r\n  const [jwtPayload, setJwtPayload] = useState('');\r\n  const [expiredInSeconds, setExpiredInSeconds] = useState(0);\r\n\r\n  function changeClientId() {\r\n    const newClientId = prompt('Please enter a new Client ID');\r\n    if (newClientId && onChangeClientId) {\r\n      onChangeClientId(newClientId);\r\n    }\r\n  }\r\n\r\n  function changeToken() {\r\n    const newToken = prompt('Please enter a new JWT token');\r\n    if (newToken && onChangeToken) {\r\n      onChangeToken(newToken);\r\n    }\r\n  }\r\n\r\n  function changeRefreshToken() {\r\n    const newToken = prompt('Please enter a new JWT token');\r\n    if (newToken && onChangeRefreshToken) {\r\n      onChangeRefreshToken(newToken);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setJwtPayload(jwt.decode(token) ?? null);\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (jwtPayload) {\r\n        setExpiredInSeconds(jwtPayload.exp - parseInt(Date.now() / 1000));\r\n      } else {\r\n        setExpiredInSeconds(0);\r\n      }\r\n    }, 1000);\r\n    return function cleanup() {\r\n      clearInterval(interval);\r\n    }\r\n  }, [jwtPayload]);\r\n\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>Type</th>\r\n          <th>Value</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <Button block size=\"sm\" onClick={changeClientId}>Override Client ID</Button>\r\n          </td>\r\n          <th>Client ID</th>\r\n          <td>\r\n            <label style={{color: 'darkorange'}}>{clientId}</label>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Button block size=\"sm\" onClick={changeToken}>Override JWT Token</Button>\r\n          </td>\r\n          <th>JWT</th>\r\n          <td>\r\n            <Form.Control as=\"textarea\" rows={4} value={token} onChange={() => {}} disabled />\r\n            {JSON.stringify(jwtPayload)}\r\n            <div className={ expiredInSeconds <= 0 ? 'text-danger' : '' }>\r\n              Expired in: { expiredInSeconds } seconds.\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <Button block size=\"sm\" onClick={changeRefreshToken}>Override Refresh Token</Button>\r\n          </td>\r\n          <th>Refresh Token</th>\r\n          <td>\r\n            <label style={{color: 'darkblue'}}>{refreshToken}</label>\r\n            {' '}\r\n            <Button onClick={onRefreshNewToken}>Refresh a new token</Button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default TokenAndClientId;","import { Form, Button, Col } from 'react-bootstrap';\r\nimport jwt from 'jsonwebtoken';\r\nimport { useState } from 'react';\r\n\r\nfunction Login({ token, onLogout, onLogin, onLogoutAll }) {\r\n  const [username, setUsername] = useState('admin');\r\n  const [password, setPassword] = useState('password');\r\n\r\n  const payload = jwt.decode(token);\r\n\r\n  return token && payload ? (\r\n    <div>\r\n      <Button variant=\"light\" onClick={() => onLogout()}>\r\n        Welcome {payload.sub}!, Logout\r\n      </Button>\r\n      <Button variant=\"light\" className=\"ml-2\" onClick={() => onLogout(false)}>\r\n        Logout but keep token\r\n      </Button>\r\n      <Button variant=\"warning\" className=\"ml-2\" onClick={() => onLogoutAll()}>\r\n        Logout from all clients!\r\n      </Button>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <Form>\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Control \r\n              type=\"text\" \r\n              placeholder=\"Please enter your username\"\r\n              value={username}\r\n              onChange={(event) => setUsername(event.target.value)}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Control \r\n              type=\"password\" \r\n              placeholder=\"Please enter your password\" \r\n              value={password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={() => onLogin(username, password)}>Login</Button>\r\n          </Col>\r\n        </Form.Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Col, Container, Row, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport AppTitle from './AppTitle';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useEffect, useState } from 'react';\nimport TokenAndClientId from './TokenAndClientId';\nimport Login from './Login';\n\nfunction App() {\n\n  const [clientId, setClientId] = useState(localStorage.getItem('clientId'));\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\n  const [profile, setProfile] = useState({});\n  const [fetchingProfileStatusCode, setFetchingProfileStatusCode] = useState(0);\n  const [isFetchingProfile, setIsFachingProfile] = useState(false);\n\n  function handleLogin(username, password) {\n    const data = JSON.stringify({\n      username,\n      password,\n      clientId,\n    });\n    console.log('Try to login with', data);\n    fetch('/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: data,\n    }).then((res) => res.json()).then((json) => {\n      console.log(json.jwt, json.refresh, json.err);\n      if (json && json.jwt && json.refresh) {\n        setToken(json.jwt);\n        setRefreshToken(json.refresh);\n      } else if (json.err) {\n        alert(json.err);\n      }\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  function handleLogout(clearToken = true) {\n    fetch('/auth/logout', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        'client-id': clientId,\n      },\n    }).then(res => {\n      if (clearToken) {\n        setToken('');\n        setRefreshToken('');\n      }\n      alert('Done logging out from this client');\n    }).catch(err => console.error);\n  }\n\n  function handleLogoutAll() {\n    fetch('/auth/logout/all', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        'client-id': clientId,\n      },\n    }).then(res => {\n      setToken('');\n      setRefreshToken('');\n      alert('Done logging out from all client');\n    }).catch(err => console.error);\n  }\n\n  function handleFetchProfile() {\n    setIsFachingProfile(true);\n    setFetchingProfileStatusCode(0);\n    setProfile({});\n    fetch('/profile', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        'client-id': clientId,\n      },\n    }).then(res => {\n      setFetchingProfileStatusCode(res.status);\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return res.text();\n      }\n    }).then(data => {\n      setTimeout(() => {\n        setIsFachingProfile(false);\n        setProfile(data);\n      }, 500);\n    }).catch(err => {\n      // console.error(err);\n      setIsFachingProfile(false);\n    });\n  }\n\n  function refreshNewToken() {\n    console.log('Refreshing a new access token...');\n    setFetchingProfileStatusCode(0);\n    setProfile({});\n    fetch('/auth/refresh', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        refreshToken: refreshToken,\n      }),\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        return res.text();\n      }\n    }).then((json) => {\n      console.log('Get new access token', json.jwt);\n      if (json && json.jwt) {\n        setToken(json.jwt);\n      }\n    }).catch(err => {\n      console.log(err);\n      setIsFachingProfile(false);\n    });\n  }\n\n  if (!clientId) {\n    console.log('Client ID was not set. Generating a new client ID and save its value into local storage.');\n    const newClientId = uuidv4();\n    localStorage.setItem('clientId', newClientId);\n    setClientId(newClientId);\n  }\n\n  useEffect(() => {\n    localStorage.setItem('clientId', clientId);\n    localStorage.setItem('token', token ?? '');\n    localStorage.setItem('refreshToken', refreshToken ?? '');\n  });\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <AppTitle/>\n        <TokenAndClientId \n          clientId={clientId} \n          onChangeClientId={newClientId => setClientId(newClientId)}\n          token={token}\n          onChangeToken={newToken => setToken(newToken)}\n          refreshToken={refreshToken}\n          onChangeRefreshToken={newToken => setRefreshToken(newToken)}\n          onRefreshNewToken={() => refreshNewToken()}\n        />\n        <Login \n          token={token} \n          onLogin={handleLogin} \n          onLogout={handleLogout} \n          onLogoutAll={handleLogoutAll}\n        />\n        <Row className=\"mt-2\">\n          <Col>\n            <Button variant=\"dark\" onClick={() => {\n              handleFetchProfile();\n            }}>\n              {isFetchingProfile ? (\n                <Spinner animation=\"border\" size=\"sm\" />\n              ) : (<></>)}\n              Fetch user profile\n            </Button>\n          </Col>\n          <Col>\n            {\n              isFetchingProfile ? (<div>Fetching...</div>) : (\n                <>\n                  {fetchingProfileStatusCode}\n                  {' '}\n                  {JSON.stringify(profile)}\n                </>\n              )\n            }\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}